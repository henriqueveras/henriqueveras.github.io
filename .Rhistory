abline(v=2,col=3,lwd=lwdd)
abline(v=mean(what),col=2,lwd=lwdd)
lines(den,col=2,lwd=lwdd)
}
repet <- 1000
n <- 20
beta <- NULL
for (i in 1:repet){
x <- rnorm(n)
eps <- rnorm(n,0,1)
y=2+2*x+eps
beta[i] <- lm(y~x)$coef[2]
}
histfun(beta, mainn= "Unbiased")
n <- 1000
beta <- NULL
for (i in 1:repet){
x <- rnorm(n)
eps <- rnorm(n,0,1)
y=2+2*x+eps
beta[i] <- lm(y~x)$coef[2]
}
histfun(beta,mainn="Consistent")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- rnorm(n)
eps <- rnorm(n,0,1)
y=2+2*x+eps
beta[i] <- (10/n)+lm(y~x)$coef[2] # Text book example
}
histfun(beta,mainn="Biased")
n <- 1000
for (i in 1:repet){
x <- rnorm(n)
eps <- rnorm(n,0,1)
y=2+2*x+eps
beta[i] <- (10/n)+lm(y~x)$coef[2]
}
histfun(beta,mainn="Consistent")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- rnorm(n)
x2 <- rnorm(n)+.2*x # make it correlate with x
eps <- rnorm(n,0,1)
y=2+2*x+2*x2+eps
beta[i] <- lm(y~x)$coef[2] # Do not include x2
}
histfun(beta,mainn="Biased")
n <- 1000
beta <- NULL
for (i in 1:repet){
x <- rnorm(n)
x2 <- rnorm(n)+.2*x
eps <- rnorm(n,0,1)
y=2+2*x+2*x2+eps
beta[i] <- lm(y~x)$coef[2]
}
histfun(beta,mainn="Inconsistent")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- rnorm(n,2,1)
y = 2+2*(1/n)
beta[i] <- y[1]
}
histfun(beta,mainn="Unbiased")
n <- 1000
for (i in 1:repet){
x <- rnorm(n,2,1)
y = 2+2*(1/n)
beta[i] <- y[1] # Ignore the effect of having Large n
}
histfun(beta,mainn="Inconsistent")
set.seed(2)
x=seq(0,1,length=1000)
f=sin(2*pi*x)
xo=seq(0,1,length=15)
fo=sin(2*pi*xo)
y=rnorm(15,fo,0.3)
plot(x,f,xlab='x',ylab='y',col=colours[4],type='l')
set.seed(2)
x=seq(0,1,length=1000)
f=sin(2*pi*x)
xo=seq(0,1,length=15)
fo=sin(2*pi*xo)
y=rnorm(15,fo,0.3)
plot(x,f,xlab='x',ylab='y',col=colors[4],type='l')
colours<-brewer.pal(n = 12, name = "Paired")
library("RColorBrewer") display.brewer.all(colorblindFriendly = TRUE)
library("RColorBrewer") display.brewer.all(colorblindFriendly = TRUE)
library("RColorBrewer")
display.brewer.all(colorblindFriendly = TRUE)
colours<-brewer.pal(n = 12, name = "Paired")
set.seed(2)
x=seq(0,1,length=1000)
f=sin(2*pi*x)
xo=seq(0,1,length=15)
fo=sin(2*pi*xo)
y=rnorm(15,fo,0.3)
plot(x,f,xlab='x',ylab='y',col=colours[4],type='l')
points(xo,y,col=colours[2])
knitr::opts_chunk$set(echo = TRUE)
library("RColorBrewer")
display.brewer.all(colorblindFriendly = TRUE)
colours<-brewer.pal(n = 12, name = "Paired")
library("RColorBrewer")
colours<-brewer.pal(n = 12, name = "Paired")
fit1 = lm(y~xo)
pol1 <- function(x) fit1$coefficients[2]*x + fit1$coefficients[1] plot(x,f,xlab='x',ylab='f',col=colours[4],type='l') lines(x,pol1(x),col=colours[6])
fit1 = lm(y~xo)
pol1 <- function(x) fit1$coefficients[2]*x + fit1$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l') lines(x,pol1(x),col=colours[6])
fit1 = lm(y~xo)
pol1 <- function(x) fit1$coefficients[2]*x + fit1$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol1(x),col=colours[6])
points(xo,y, col=colours[2])
mse1 = mean((f-pol1(x))^2)
mse1
mse1 = mean((f-pol1(x))^2)
mse1
fit2 = lm(y~xo+I(xo^2))
pol2 <- function(x) fit2$coefficients[3]*x^2+fit3$coefficients [2]*x+ fit3$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol2(x),col=colours[6])
fit2 = lm(y~xo+I(xo^2))
pol2 <- function(x) fit2$coefficients[3]*x^2+fit2$coefficients [2]*x+ fit2$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol2(x),col=colours[6])
points(xo,y, col=colours[2])
mse1 = mean((f-pol2(x))^2)
mse1
mse1 = mean((f-pol1(x))^2)
mse1
fit3 = lm(y~xo+I(xo^2)+I(xo^3))
pol3 <- function(x) fit3$coefficients[4]*x^3+fit3$coefficients[3]*x^2+fit3$coefficients [2]*x+ fit3$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol3(x),col=colours[6])
points(xo,y, col=colours[2])
mse3 = mean((f-pol3(x))^2)
mse3
fit4 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4))
pol4 <- function(x) fit4$coefficients[5]*x^4+fit4$coefficients[4]*x^3+fit4$coefficients[3]*x^2+fit4$coefficients [2]*x+ fit4$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol4(x),col=colours[6])
points(xo,y, col=colours[2])
fit4 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4))
pol4 <- function(x) fit4$coefficients[5]*x^4+fit4$coefficients[4]*x^3+fit4$coefficients[3]*x^2+fit4$coefficients [2]*x+ fit4$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol4(x),col=colours[6])
points(xo,y, col=colours[2])
mse4 = mean((f-pol4(x))^2)
mse4
fit5 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4)+I(xo^5))
pol5 <- function(x) fit5$coefficients[6]*x^5+fit5$coefficients[5]*x^4+fit5$coefficients[4]*x^3+fit5$coefficients[3]*x^2+fit5$coefficients [2]*x+ fit5$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol5(x),col=colours[6])
points(xo,y, col=colours[2])
mse5 = mean((f-pol5(x))^2)
mse5
fit6 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4)+I(xo^5)+I(xo^6))
pol6 <- function(x) fit6$coefficients[7]*x^6+fit6$coefficients[6]*x^5+fit6$coefficients[5]*x^4+fit6$coefficients[4]*x^3+fit6$coefficients[3]*x^2+fit6$coefficients [2]*x+ fit6$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol6(x),col=colours[6])
points(xo,y, col=colours[2])
mse6 = mean((f-pol6(x))^2)
mse6
mse6 = mean((f-pol6(x))^2)
mse6
fit7 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4)+I(xo^5)+I(xo^6)+I(xo^7))
pol7 <- function(x) fit7$coefficients[8]*x^7+fit7$coefficients[7]*x^6+fit7$coefficients[6]*x^5+fit7$coefficients[5]*x^4+fit7$coefficients[4]*x^3+fit7$coefficients[3]*x^2+fit7$coefficients [2]*x+ fit7$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol7(x),col=colours[6])
points(xo,y, col=colours[2])
mse7 = mean((f-pol7(x))^2)
mse7
fit8 = lm(y~xo+I(xo^2)+I(xo^3)+I(xo^4)+I(xo^5)+I(xo^6)+I(xo^7)+I(xo^8))
pol8 <- function(x) fit8$coefficients[9]*x^8+fit8$coefficients[8]*x^7+fit8$coefficients[7]*x^6+fit8$coefficients[6]*x^5+fit8$coefficients[5]*x^4+fit8$coefficients[4]*x^3+fit8$coefficients[3]*x^2+fit8$coefficients [2]*x+ fit8$coefficients[1]
plot(x,f,xlab='x',ylab='f',col=colours[4],type='l')
lines(x,pol8(x),col=colours[6])
points(xo,y, col=colours[2])
mse8 = mean((f-pol8(x))^2)
mse8
mse<-c(mse1 mse2 mse3 mse4 mse5 mse6 mse7 mse8)
mse<-c(mse1, mse2, mse3, mse4, mse5, mse6, mse7, mse8)
mse2 = mean((f-pol2(x))^2)
mse2
mse<-c(mse1, mse2, mse3, mse4, mse5, mse6, mse7, mse8)
mse
mse<-c(mse1, mse2, mse3, mse4, mse5, mse6, mse7, mse8)
order<-c(1,2,3,4,5,6,7,8)
plot(order,mse)
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1/n
y = 2+2*x
beta[i] <- lm(y~x)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1:n
eps <- rnorm(n,0,1)
y=2+2*x+eps
beta[i] <- lm(y~x)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1:n
eps <- rnorm(n,0,1)
y=2+2*(1/x)+eps
beta[i] <- lm(y~1/x)$coef[2]
}
histfun(beta,mainn="Unbiased")
z=1/x
z
###  Unbiased But Inconsistent
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,1)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,10)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 1000
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,1)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 1000
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,1)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Inconsistent")
n <- 20
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,1)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Unbiased")
n <- 1000
beta <- NULL
for (i in 1:repet){
x <- 1:n
z <- 1/x
eps <- rnorm(n,0,1)
y=2+2*z+eps
beta[i] <- lm(y~z)$coef[2]
}
histfun(beta,mainn="Inconsistent")
data <- read.table(file = "TableF2-2.txt", header = TRUE)
data <- read.table(file = "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.txt", header = TRUE)
data <- read.table(file = "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.txt")
data <- read.table(file = "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.xls")
install.packages("readxl")
install.packages("readxl")
library(readxl)
data <- read_excel("/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.xls")
data
df %>% drop_na(data)
library(tidyverse)
df %>% drop_na(data)
data <- drop_na(data)
data
df<-data[!(data$PUC==0),]
df
write.csv(d, "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/data_set.xls", row.names=FALSE)
write.csv(df, "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/data_set.xls", row.names=FALSE)
df %>%
mutate(GasPc = GasExp/Pop)
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop)
model1<-lm(GasPc~IncomePc + PNC + PUC + PPT + Year, data=df)
model1<-lm(GasExp ~ PNC + PUC + PPT + Year, data=df)
df
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop)
df
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop
)
df
df <-
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop
)
model1<-lm(GasExp ~ PNC + PUC + PPT + Year, data=df)
df
model1<-lm(GasPc ~ IncomePc + PNC + PUC + PPT + Year, data=df)
model1
summary(model1)
model1<-lm(GasPc ~ IncomePc + PNC + PUC + PPT + PN + PS + Year, data=df)
summary(model1)
model1<-lm(GasPc ~ IncomePc + Gasp + PNC + PUC + PPT + PN + PS + Year, data=df)
summary(model1)
model1<-lm(GasExp ~ Income + Gasp + PNC + PUC + PPT + PN + PS + Year, data=df)
summary(model1)
df <-
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop, G = 1000000*GasExp/(Gasp*pop)
)
df <-
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop, G = 1000000*GasExp/(Gasp*Pop)
)
df <-
df %>%
mutate(GasPc = GasExp/Pop, IncomePc = Income/Pop, G = 1000000*GasExp/(Gasp*Pop), t = Year - 1952
)
model1<-lm(G ~ Income + Gasp + PNC + PUC + PPT + PN + PS + t, data=df)
summary(model1)
library(readxl)
library(readxl)
library(tidyverse)
data <- read_excel("/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.xls")
data <- drop_na(data)
df<-data[!(data$PUC==0),]
write.csv(df, "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/data_set.xls", row.names=FALSE)
#Greene exerises
df <-
df %>%
mutate(G = 1000000*GasExp/(Gasp*Pop), t = Year - 1952
)
model1<-lm(G ~ Income + Gasp + PNC + PUC + PPT + PN + PS + t, data=df)
summary(model1)
resid_G <- residuals(lm(G ~ Gasp + PNC + PUC + PPT + PN + PS + t, data=df))
resid_inc <- residuals(lm(Income ~ Gasp + PNC + PUC + PPT + PN + PS + t, data=df))
partial_inc <- lm(resid_G <- resid_inc)
resid_G <- residuals(lm(G ~ Gasp + PNC + PUC + PPT + PN + PS + t, data=df))
resid_inc <- residuals(lm(Income ~ Gasp + PNC + PUC + PPT + PN + PS + t, data=df))
partial_inc <- lm(resid_G ~ resid_inc)
summary(partial_inc)
model1<-lm(G ~ Income + Gasp + PNC + PUC + PPT + PN + PS + t, data=df)
summary(model1)
resid_G <- residuals(lm(G ~ Income + PNC + PUC + PPT + PN + PS + t, data=df))
resid_gasp <- residuals(lm(Gasp ~ Income + PNC + PUC + PPT + PN + PS + t, data=df))
partial_gasp <- lm(resid_G ~ resid_gasp)
summary(partial_gasp)
resid_G <- residuals(lm(G ~ Income + Gasp + PUC + PPT + PN + PS + t, data=df))
resid_gasp <- residuals(lm(PNC ~ Income + Gasp + PUC + PPT + PN + PS + t, data=df))
partial_pnc <- lm(resid_G ~ resid_pnc)
resid_G <- residuals(lm(G ~ Income + Gasp + PUC + PPT + PN + PS + t, data=df))
resid_pnc <- residuals(lm(PNC ~ Income + Gasp + PUC + PPT + PN + PS + t, data=df))
partial_pnc <- lm(resid_G ~ resid_pnc)
summary(partial_pnc)
install.packages(msm)
install.packages("msm")
library(msm)
install.packages("mvtnorm")
library(msm)
library(mvtnorm)
library(msm)
deltamethod(~ x4 - x5, coef(model1), vcov(model1))
vcov(model1)
C <- c(0,0,0,1,-1,0,0,0,0)
var_b <- vcov(model1)
var_g <- C %*% var_g %*% t(C)
var_g <- C %*% var_b %*% t(C)
var_g <- t(C) %*% var_b %*% C
sqrt(var_g)
df <-
df %>%
mutate(l_G = log(G),
l_Income = log(Income),
l_Gasp = log(Gasp),
l_PUC = log(PUC),
l_PPT = log(PPT),
l_PN = log(PN),
l_PS = log(PS)
)
model2 <- lm(l_G ~ l_Income +  l_Gasp +  l_PNC +  l_PUC +  l_PPT +  l_PN +  l_PS + t, data=df)
df <-
df %>%
mutate(l_G = log(G),
l_Income = log(Income),
l_Gasp = log(Gasp),
l_PNC = log(PNC),
l_PUC = log(PUC),
l_PPT = log(PPT),
l_PN = log(PN),
l_PS = log(PS)
)
model2 <- lm(l_G ~ l_Income +  l_Gasp +  l_PNC +  l_PUC +  l_PPT +  l_PN +  l_PS + t, data=df)
summary(model2)
vcov(model1)
6.310862e-05+1.324157e-05+2*(-2.206636e-05)
df2<-data.matrix(df)
df2_t <- t(df2)
df2_t_df_2 <- df2_t %*% df2
df2_t_df_2_inv <- solve(df2_t_df_2)
data <- read_excel("/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF2-2.xls")
data <- drop_na(data)
df<-data[!(data$PUC==0),]
write.csv(df, "/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/data_set.xls", row.names=FALSE)
#Greene exerises
df <-
df %>%
mutate(G = 1000000*GasExp/(Gasp*Pop), t = Year - 1952
)
df2<-data.matrix(df)
df2_t <- t(df2)
df2_t_df_2 <- df2_t %*% df2
df2_t_df_2_inv <- solve(df2_t_df_2)
test <- df$GasExp/df$Gasp*df$Pop
data <- read.table("/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF5-2.shd.txt")
head(data)
data <- read.table("/Users/henriquefonseca/Documents/UFPE/Econometria - PIMES/codigos/TableF5-2.shd.txt",header = TRUE)
head(data)
library(tidyverse)
data1 <- data  %>%
mutate(l_realinvs = log(realinvs), l_realgdp = log(realgdp), d_cpi_u = lag(cpi_u))
data1 <- data  %>%
mutate(l_realinvs = log(realinvs), l_realgdp = log(realgdp), d_cpi_u = lag(cpi_u), time = seq.int(nrow(data)))
head(data1)
model1<- lm(l_realinvs = tbilrate + d_cpi_u + l_realgdp + time, df=data1)
model1<- lm(l_realinvs = tbilrate + d_cpi_u + l_realgdp + time, data=data1)
model1<- lm(l_realinvs ~ tbilrate + d_cpi_u + l_realgdp + time, data=data1)
summary(model1)
head(data1)
data1 <- data  %>%
mutate(l_realinvs = log(realinvs), l_realgdp = log(realgdp), l_cpi_u = log(cpi_u), time = seq.int(nrow(data)))
data1 <- data  %>%
mutate(l_cpi_u = lag(l_cpi_u))
data1 <- data1  %>%
mutate(l_cpi_u = lag(l_cpi_u))
model1<- lm(l_realinvs ~ tbilrate + d_cpi_u + l_realgdp + time, data=data1)
data1 <- data  %>%
mutate(l_realinvs = log(realinvs), l_realgdp = log(realgdp), l_cpi_u = log(cpi_u), time = seq.int(nrow(data)))
data1 <- data1  %>%
mutate(d_cpi_u = lag(l_cpi_u))
model1<- lm(l_realinvs ~ tbilrate + d_cpi_u + l_realgdp + time, data=data1)
summary(model1)
model1<- lm(realinvs ~ tbilrate + d_cpi_u + realgdp + time, data=data1)
summary(model1)
model1<- lm(l_realinvs ~ tbilrate + d_cpi_u + l_realgdp + time, data=data1)
summary(model1)
vcov(model1)
coeff(model1)
coef(model1)
data1 <- data1  %>%
mutate(real_in = tbilrate - l_cpi_u)
model2<-lm(l_realinvs ~ real_in + d_cpi_u + l_realgdp + time, data=data1)
summary(model2)
model3<-lm(l_realinvs ~ real_in + tbilrate + l_realgdp + time, data=data1)
summary(model3)
model3<-lm(l_realinvs ~ real_in + tbilrate + l_realgdp + time, data=data1)
summary(model3)
model3<-lm(l_realinvs ~ real_in + tbilrate + l_realgdp + time, data=data1)
summary(model3)
model4<- lm(l_realinvs ~ tbilrate, data=data1)
summary(model4)
head(data1)
head(data1)
model1<- lm(l_realinvs ~ tbilrate + d_cpi_u + l_realgdp + time, data=data1)
summary(model1)
vcov(model1)
data1 <- data1  %>%
mutate(real_in = tbilrate - l_cpi_u)
model2<-lm(l_realinvs ~ real_in + d_cpi_u + l_realgdp + time, data=data1)
summary(model2)
install.packages("ivdoctr")
library(ivdoctr)
head(colonial)
download.file("courses.edx.org/assets/courseware/v1/11ed1a4b6ae7a89062c2e510d8c42997/asset-v1:MITx+14.750x+2T2020+type@asset+block/AJRData.RData", destfile = "AJRData.RData")
download.file("courses.edx.org/assets/courseware/v1/11ed1a4b6ae7a89062c2e510d8c42997/asset-v1:MITx+14.750x+2T2020+type@asset+block/AJRData.RData", destfile = "AJRData.RData")
library(AER)
library(tidyverse)
library(ivpack)
library(modelsummary)
data(CigarettesSW)
CigarettesSW <- CigarettesSW %>%
mutate(real_price = price/cpi, real_tax = taxs/cpi,
log_price = log(real_price), log_packs = log(packs))
ivmodel <- ivreg(log_packs ~ log_price | real_tax, data = CigarettesSW)
msummary(ivmodel, stars = c('*' = .1, '**' = .05, '***' = .01))
CigarettesSW <- CigarettesSW %>%
mutate(log_income = log(income))
ivmodel_2 <- ivreg(log_packs ~ log_price + log_income | log_income + real_tax, data = CigarettesSW)
msummary(ivmodel_2, stars = c('*' = .1, '**' = .05, '***' = .01))
